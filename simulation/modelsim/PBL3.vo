// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "05/21/2021 08:06:47"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module TAKEMYBODY (
	D0,
	clk,
	D1,
	D2,
	D3);
output 	D0;
input 	clk;
output 	D1;
output 	D2;
output 	D3;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \inst31~regout ;
wire \inst30~regout ;
wire \inst29~regout ;
wire \inst32~regout ;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y4_N2
maxii_lcell inst31(
// Equation(s):
// \inst31~regout  = DFFEAS((\inst30~regout  & (((!\inst31~regout )))) # (!\inst30~regout  & (\inst32~regout  & (!\inst29~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\inst32~regout ),
	.datab(\inst29~regout ),
	.datac(\inst30~regout ),
	.datad(\inst31~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst31~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst31.lut_mask = "02f2";
defparam inst31.operation_mode = "normal";
defparam inst31.output_mode = "reg_only";
defparam inst31.register_cascade_mode = "off";
defparam inst31.sum_lutc_input = "datac";
defparam inst31.synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N0
maxii_lcell inst30(
// Equation(s):
// \inst30~regout  = DFFEAS(((!\inst32~regout  & ((\inst30~regout ) # (\inst31~regout )))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\inst30~regout ),
	.datac(\inst32~regout ),
	.datad(\inst31~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst30~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst30.lut_mask = "0f0c";
defparam inst30.operation_mode = "normal";
defparam inst30.output_mode = "reg_only";
defparam inst30.register_cascade_mode = "off";
defparam inst30.sum_lutc_input = "datac";
defparam inst30.synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N9
maxii_lcell inst29(
// Equation(s):
// \inst29~regout  = DFFEAS((((\inst30~regout  & \inst31~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\inst30~regout ),
	.datad(\inst31~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst29~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst29.lut_mask = "f000";
defparam inst29.operation_mode = "normal";
defparam inst29.output_mode = "reg_only";
defparam inst29.register_cascade_mode = "off";
defparam inst29.sum_lutc_input = "datac";
defparam inst29.synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y4_N6
maxii_lcell inst32(
// Equation(s):
// \inst32~regout  = DFFEAS((\inst29~regout ) # ((\inst30~regout ) # ((!\inst32~regout  & !\inst31~regout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(\inst32~regout ),
	.datab(\inst29~regout ),
	.datac(\inst30~regout ),
	.datad(\inst31~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\inst32~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam inst32.lut_mask = "fcfd";
defparam inst32.operation_mode = "normal";
defparam inst32.output_mode = "reg_only";
defparam inst32.register_cascade_mode = "off";
defparam inst32.sum_lutc_input = "datac";
defparam inst32.synch_mode = "off";
// synopsys translate_on

// Location: PIN_97,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \D0~I (
	.datain(\inst32~regout ),
	.oe(vcc),
	.combout(),
	.padio(D0));
// synopsys translate_off
defparam \D0~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_96,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \D1~I (
	.datain(\inst31~regout ),
	.oe(vcc),
	.combout(),
	.padio(D1));
// synopsys translate_off
defparam \D1~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_95,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \D2~I (
	.datain(\inst30~regout ),
	.oe(vcc),
	.combout(),
	.padio(D2));
// synopsys translate_off
defparam \D2~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_92,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \D3~I (
	.datain(\inst29~regout ),
	.oe(vcc),
	.combout(),
	.padio(D3));
// synopsys translate_off
defparam \D3~I .operation_mode = "output";
// synopsys translate_on

endmodule
