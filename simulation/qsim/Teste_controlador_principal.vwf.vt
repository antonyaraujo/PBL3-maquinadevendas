// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/21/2021 21:11:33"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          controlador_principal
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module controlador_principal_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [1:0] habilitador;
reg produto_existe;
reg tempo;
reg valor_correto;
// wires                                               
wire [1:0] estado;

// assign statements (if any)                          
controlador_principal i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.estado(estado),
	.habilitador(habilitador),
	.produto_existe(produto_existe),
	.tempo(tempo),
	.valor_correto(valor_correto)
);
initial 
begin 
#1000000 $finish;
end 

// tempo
initial
begin
	tempo = 1'b0;
	tempo = #900000 1'b1;
end 
// habilitador[ 1 ]
initial
begin
	habilitador[1] = 1'b0;
	habilitador[1] = #270000 1'b1;
end 
// habilitador[ 0 ]
initial
begin
	habilitador[0] = 1'b0;
	habilitador[0] = #170000 1'b1;
	habilitador[0] = #100000 1'b0;
end 

// clk
initial
begin
	repeat(12)
	begin
		clk = 1'b0;
		clk = #40000 1'b1;
		# 40000;
	end
	clk = 1'b0;
end 

// produto_existe
initial
begin
	produto_existe = 1'b0;
	produto_existe = #350000 1'b1;
end 

// valor_correto
initial
begin
	valor_correto = 1'b0;
	valor_correto = #480000 1'b1;
end 
endmodule

